---
import { Button } from './ui/button';
import { blogs } from '../constants/blogs';

---


<div id='blogs' class='pb-[10px]'>
  <div class='container'>
    <div class='row'>
      <div class='col-12'>
        <h1>Blogs</h1>
        <Button id='test-state' >Test state button</Button>
      </div>
    </div>
    
    <!-- MAP BLOGS as react -->

    <div>
      {blogs.map(blog => (
        <div id={`blog-item`} data-blog-id={blog.id} class='row'>
          <div class='col-12'>
            <h2>{blog.title}</h2>
          </div>
          <div class='col-12'>
            <p>{blog.description}</p>
          </div>
          <div class='col-12'>
            <img src={blog.image} alt={blog.title} />
          </div>
          <div class='col-12'>
            <a href={blog.link}>Leer más</a>
          </div>
        </div>
      ))}
    </div>
    
  </div>
</div>

<script>
import { $ } from '@/lib/dom-selector';
import { thresholdState } from '@/store/pages';

  const listaBlogs = document.querySelectorAll('#blog-item');

  const observerInput = $('#observer-limit');

  observerInput.oninput = function(e: InputEvent) {

    const value = (e.target as HTMLInputElement).value;

    if (value === '') return (e.target as HTMLInputElement).value = '';

    if(Number(value) > 1){
      (e.target as HTMLInputElement).value = '1';
    }
    // console.log('e.target.value', (e.target as HTMLInputElement).value)
    let threshold = Number((e.target as HTMLInputElement).value);
    // console.log('threshold', threshold)
    if (threshold === 0) return;
    // console.log('pasó')
    thresholdState.set(threshold)
  }

  let observer = null;

  thresholdState.subscribe(value => {
    // console.log('value', value)
    // return value;
    // console.log('observer', observer)
    if (observer) {
      observer.disconnect();
      // listaBlogs.forEach(blog => observer.unobserve(blog));
    }
    const opciones = {
      root: null,
      rootMargin: '0px',
      threshold: value
    };

    // console.log('opciones', opciones.threshold)

    listaBlogs.forEach(blog => {
      observer = new IntersectionObserver(handleIntersection, opciones);
      observer.observe(blog);
      // observer.disconnect()
      // Escuchar clics en cada elemento de la lista
      blog.addEventListener('click', handleClick);
    });

  })


  // console.log('threshold', threshold)

//   const opciones = {
//   root: null,
//   rootMargin: '0px',
//   threshold: 1
// };

// Función para manejar las intersecciones
function handleIntersection(entries: IntersectionObserverEntry[], observer: IntersectionObserver) {
  entries.forEach(entry => {
    const target = entry.target as HTMLElement;
    if (entry.isIntersecting) {
      // console.log('dataset', target.dataset)
      console.log(`El blog con ID ${target.dataset.blogId} está dentro de la vista`);
      // Realizar un seguimiento de la intersección inicial
      trackInteraction(target.dataset.blogId, 'view');
      // Desconectar el observador después de la intersección inicial
      observer.unobserve(entry.target);
    }
  });
}

// Función para manejar los clics en los elementos de la lista
function handleClick(event: MouseEvent) {
  const target = event.target as HTMLElement;
  const blogId = target.dataset.blogId;
  console.log(`Se hizo clic en el blog con ID ${blogId}`);
  // Realizar un seguimiento del clic
  trackInteraction(blogId, 'click');
}

// Función para realizar un seguimiento de las interacciones
function trackInteraction(blogId: string, interactionType: string) {
  const interactionData = {
    timestamp: new Date(),
    userId: 'id_del_usuario',
    blogId: blogId,
    interactionType: interactionType
  };
  // Aquí puedes enviar los datos de interacción a tu servidor o sistema de análisis
  // console.log('Datos de interacción:', interactionData);
}

// Crear una instancia de IntersectionObserver para cada elemento de la lista
// listaBlogs.forEach(blog => {
//   const observer = new IntersectionObserver(handleIntersection, opciones);
//   observer.observe(blog);

//   // Escuchar clics en cada elemento de la lista
//   blog.addEventListener('click', handleClick);
// });

</script>

<script>
import { $ } from '@/lib/dom-selector';
import { isOpen } from '@/store/pages';

// console.log('XDXDXD')

function openDialog() {
    console.log('openDialog')
    isOpen.set(!isOpen.get());
  }

const stateButton = $('#test-state');

stateButton.onclick = openDialog;

// console.log('isOpen', isOpen)

  isOpen.subscribe(open => {
    // console.log('open', open)
    // if (open) {
    //   document.getElementById('dialog').style.display = 'block';
    // } else {
    //   document.getElementById('dialog').style.display = 'none';
    // }
  }); 

</script>